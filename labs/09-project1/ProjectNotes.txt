
FINAL LCD USER INTERFACE:
-------------------
   XY:XY:XY:XY
START		 RESET		
-------------------

FINAL PROGRAM LOGIC:

Move Cursor (xy) Using Joistick
Rotare Encoder -> SET VALUE
Press Joistick -> START/STOP 
Press Encoder -> RESET



**OLD: Do NOT Use** 
TIMER		MIN XY
HOURS XY	SEC XY
Move Cursor (xy) Using Joistick
DELAY(500);
DISPLAY(TIME)
JOISTYCK (START/STOP)
DISPLAY(TIME)
CLOCK			MIN
HOURS			SEC
DELAY (500);
DISPLAY (TIME)

         1111111
1234567890123456
  XY:XY:XY:XY
????????????????

STOP
START      RESET
????????????????



    lcd_gotoxy(0, 1);
    lcd_puts("START");

    lcd_gotoxy(11, 1);
    lcd_puts("RESET");



 uint8_t Smile[8] = {
        0b00000, 0b00000, 0b10001, 0b00100, 0b00100, 0b10001, 0b01110, 0b00000};

    uint8_t Zero[8] = {
        0b00000, 0b00000, 0b00000, 0b00000, 0b00000, 0b00000, 0b00000, 0b00000};

    uint8_t One[8] = {
        0b00001, 0b00001, 0b00001, 0b00001, 0b00001, 0b00001, 0b00001, 0b00001};

    uint8_t Two[8] = {
        0b00011, 0b00011, 0b00011, 0b00011, 0b00011, 0b00011, 0b00011, 0b00011};

    uint8_t Three[8] = {
        0b00111, 0b00111, 0b00111, 0b00111, 0b00111, 0b00111, 0b00111, 0b00111};

    uint8_t Four[8] = {
        0b01111, 0b01111, 0b01111, 0b01111, 0b01111, 0b01111, 0b01111, 0b01111};

    uint8_t Five[8] = {
        0b11111, 0b11111, 0b11111, 0b11111, 0b11111, 0b11111, 0b11111, 0b11111};

    // Set pointer to beginning of CGRAM memory
    lcd_command(1 << LCD_CGRAM);
    for (uint8_t i = 0; i < 8; i++)
    {
        // Store all new chars to memory line by line
        lcd_data(Smile[i]);
    }
    // Set DDRAM address to display characters
    lcd_command(1 << LCD_DDRAM);